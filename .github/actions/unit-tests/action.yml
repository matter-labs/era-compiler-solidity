name: 'ZKSolc Tests'
description: 'Executes zksolc unit tests'
inputs:
  target:
    description: 'Specific target triplet.'
    required: false
    default: ''
  sanitizer:
    description: 'Sanitizer to use for test.'
    required: false
    default: ''
  results-xml:
    description: 'Output unit tests results XML filename.'
    required: false
    default: 'unit-tests-results.xml'
  build-type:
    description: 'Type of build: release or debug.'
    required: false
    default: 'release'
runs:
  using: "composite"
  steps:
    - name: Define build target
      id: build-target
      if: inputs.target != ''
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      run: |
        rustup target add ${{ inputs.target }}
        echo "target=--target ${{ inputs.target }}" >> "${GITHUB_OUTPUT}"

    - name: Install nightly
      if: inputs.sanitizer != '' && inputs.target != ''
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      run: |
        rustup install nightly-${{ inputs.target }}
        rustup component add rust-src --toolchain nightly-${{ inputs.target }}

    - name: Run unit tests
      continue-on-error: true
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      env:
        RUSTC_BOOTSTRAP: 1
      run: |
        cargo install cargo2junit
        if [ '${{ inputs.sanitizer }}' != '' ]; then
          export RUSTFLAGS="-Z sanitizer=${{ inputs.sanitizer }}"
          NIGHTLY="+nightly"
        fi
        [ ${{ inputs.build-type }} = 'release' ] && RELEASE="--release"
        cargo ${NIGHTLY} test ${RELEASE} ${{ steps.build-target.outputs.target }} -- -Z unstable-options \
          --format json | tee -a results.json
        if [ $? -eq 0 ]; then
          cargo2junit < results.json > "${{ inputs.results-xml }}"
        else
          echo "Unit tests failed"
          exit 1
        fi

    - name: Upload results Linux
      if: runner.os == 'Linux'
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        check_name: ${{ runner.os }} ${{ runner.arch }} Unit Tests Results
        files: ${{ inputs.results-xml }}
        action_fail_on_inconclusive: true
        comment_mode: off

    - name: Upload test results MacOS
      if: runner.os == 'macOS'
      uses: EnricoMi/publish-unit-test-result-action/macos@v2
      with:
        check_name: ${{ runner.os }} ${{ runner.arch }} Unit Tests Results
        files: ${{ inputs.results-xml }}
        action_fail_on_inconclusive: true
        comment_mode: off

    - name: Upload test results Windows
      if: runner.os == 'Windows'
      uses: EnricoMi/publish-unit-test-result-action/windows@v2
      with:
        check_name: ${{ runner.os }} ${{ runner.arch }} Unit Tests Results
        files: ${{ inputs.results-xml }}
        action_fail_on_inconclusive: true
        comment_mode: off
