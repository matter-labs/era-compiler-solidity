name: 'Build LLVM'
description: 'Builds backend LLVM framework'
inputs:
  target:
    description: 'Specific build target triplet.'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    - name: Prepare environment
      if: runner.os == 'macOS'
      run: brew install cmake ninja
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}

    - name: Define build target
      id: build-target
      if: inputs.target != ''
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      run: |
        rustup target add ${{ inputs.target }}
        echo "target=--target ${{ inputs.target }}" >> $GITHUB_OUTPUT

    - name: Clone LLVM framework
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      run: |
        cargo install compiler-llvm-builder ${{ steps.build-target.outputs.target }}
        zkevm-llvm clone

    - name: Define ccache key
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      id: ccache-key
      run: |
        LLVM_BRANCH="$(git -C ./llvm rev-parse --abbrev-ref HEAD)"
        LLVM_SHORT_SHA="$(git -C ./llvm rev-parse --short HEAD)"
        echo "key=llvm-${LLVM_BRANCH}-${LLVM_SHORT_SHA}-${{ runner.os }}-${{ runner.arch }}" | tee -a "${GITHUB_OUTPUT}"

    - name: Prepare ccache installation
      if: runner.os == 'Linux'
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      run: apt update

    - name: Set up compiler cache
      uses: hendrikmuhs/ccache-action@v1.2
      env:
        CCACHE_BASEDIR: ${{ github.workspace }}
        CCACHE_NOHASHDIR: "true"
        CCACHE_COMPILERCHECK: "content"
      with:
        key: ${{ steps.ccache-key.outputs.key }}
        restore-keys: ${{ steps.ccache-key.outputs.key }}
        append-timestamp: false
        max-size: "2G"
        verbose: 2
        save: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v') }}

    - name: Build LLVM Linux
      if: ${{ runner.os == 'Linux' }}
      uses: nick-fields/retry@v2
      env:
        CCACHE_BASEDIR: ${{ github.workspace }}
        CCACHE_NOHASHDIR: "true"
        CCACHE_COMPILERCHECK: "content"
        LIBSTDCPP_SOURCE_PATH: "C:/a/_temp/msys64/mingw64/lib/libstdc++.a"
      with:
        timeout_minutes: 60
        max_attempts: 16 # protection mechanism for sporadic dependencies download failure
        command: zkevm-llvm build --targets 'EVM' --use-ccache

    - name: Build LLVM MacOS and Windows
      if: ${{ runner.os != 'Linux' }}
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      env:
        CCACHE_BASEDIR: ${{ github.workspace }}
        CCACHE_NOHASHDIR: "true"
        CCACHE_COMPILERCHECK: "content"
        LIBSTDCPP_SOURCE_PATH: "C:/a/_temp/msys64/mingw64/lib/libstdc++.a"
      run: |
        zkevm-llvm build --targets 'EVM' --use-ccache
