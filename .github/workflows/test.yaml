name: Tests

# Execute workflow for each PR and with each merge to the trunk
on:
  workflow_dispatch:
    inputs:
      zksolc-version:
        type: string
        description: "Prebuilt zksolc version to use, (repo: https://github.com/matter-labs/zksolc-bin/releases)"
        required: true
        default: "1.4.1"
      solc-version:
        type: string
        description: "Prebuilt solc version, (repo: https://github.com/matter-labs/era-solidity/releases)"
        required: true
        default: "0.8.25-1.0.0"
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '**/*.md'
  push:
    branches:
      - main

# Cancel the workflow if any new changes pushed to a feature branch or the trunk
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  # Check for cargo licensing issues
  cargo-license:
    uses: matter-labs/era-compiler-ci/.github/workflows/cargo-license.yaml@main
    secrets: inherit

  # Check for secrets leak in the repository
  secrets-scanner:
    uses: matter-labs/era-compiler-ci/.github/workflows/secrets-scanner.yaml@main
    secrets: inherit

  # Build and run unit and CLI tests
  build-and-test:
    strategy:
      fail-fast: false # finalize testing of all targets even if one failed
      matrix:
        include:
          - name: "MacOS x86"
            runner: macos-12-large
          - name: "MacOS arm64"
            runner: [self-hosted, macOS, ARM64]
          - name: "Linux x86"
            runner: matterlabs-ci-runner
            image: matterlabs/llvm_runner:ubuntu22-llvm17-latest
            target: "x86_64-unknown-linux-musl"
          - name: "Linux ARM64"
            runner: matterlabs-ci-runner-arm
            image: matterlabs/llvm_runner:ubuntu22-llvm17-latest
            target: "aarch64-unknown-linux-musl"
          - name: "Windows"
            runner: windows-2022-github-hosted-16core
    runs-on: ${{ matrix.runner }}
    container:
      image: ${{ matrix.image || '' }} # Special workaround to allow matrix builds with optional container
    name: ${{ matrix.name }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Check CLI test files
        id: changed-files-yaml
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            cli_tests:
              - 'cli-tests/**'
              - '.github/actions/cli-tests/**'

      - name: Prepare Windows env
        if: runner.os == 'Windows'
        uses: matter-labs/era-compiler-ci/.github/actions/prepare-msys@main

      - name: Build LLVM
        if: steps.changed-files-yaml.outputs.cli_tests_only_changed == 'false'
        uses: matter-labs/era-compiler-ci/.github/actions/build-llvm@main
        with:
          target-env: 'musl'
          enable-assertions: 'false'

      - name: Build zksolc
        if: steps.changed-files-yaml.outputs.cli_tests_only_changed == 'false'
        uses: ./.github/actions/build
        with:
          target: ${{ matrix.target || '' }}

      - name: Install solc compiler
        uses: ./.github/actions/install-solc
        with:
          solc-version: ${{ github.event.inputs.solc-version }}

      - name: Run tests
        if: steps.changed-files-yaml.outputs.cli_tests_only_changed == 'false'
        uses: ./.github/actions/unit-tests
        with:
          target: ${{ matrix.target || '' }}

      - name: Run CLI tests
        uses: ./.github/actions/cli-tests
        with:
          use-prebuilt-zksolc: ${{ steps.changed-files-yaml.outputs.cli_tests_only_changed }}
          zksolc-version: ${{ github.event.inputs.zksolc-version }}
