name: Use sources and call the CLI testing
on:
  pull_request:
    paths-ignore:
      - '**/cli-tests/**'
      - '**/workflows/cli*'
      - '.gitignore'
      - '**/*.md'
  workflow_dispatch:
    inputs:
      solc:
        type: string
        description: "solc version, (repo: https://github.com/matter-labs/era-solidity/releases) e.g. 0.8.23"
        required: true
        default: "0.8.23"

env:
  SOLC_VERSION: ${{ github.event.inputs.solc || '0.8.23' }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
  
jobs:
  build_macos_amd64:
    runs-on: macos-12-large
    outputs:
       SOLC_VERSION: ${{ env.SOLC_VERSION }}
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare environment
        shell: zsh {0}
        run: |
          brew install cmake ninja

      - name: Build LLVM framework
        shell: zsh {0}
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: "true"
        run: |
          cargo install compiler-llvm-builder
          zkevm-llvm clone
          zkevm-llvm build

      - name: Build compiler
        shell: zsh {0}
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: "true"
        run: |
          cargo build --release

      - name: Prepare binary file name
        shell: zsh {0}
        run: |
          mkdir -p releases/build_macos_amd64
          mv ./target/release/zksolc ./releases/build_macos_amd64/zksolc

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build_macos_amd64
          path: releases

  build_linux_amd64:
    runs-on: [matterlabs-ci-runner]
    container:
      image: matterlabs/llvm_runner:latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - musl
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    outputs:
       SOLC_VERSION: ${{ env.SOLC_VERSION }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare environment
        run: |
          rustup target add x86_64-unknown-linux-${{ matrix.target }}

      - name: Build LLVM framework
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: "true"
        run: |
          cargo install compiler-llvm-builder --target x86_64-unknown-linux-${{ matrix.target }}
          export PATH="${PATH}:/usr/local/cargo/bin/"
          zkevm-llvm clone
          zkevm-llvm build

      - name: Build compiler
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: "true"
        run: |
          cargo build --release --target x86_64-unknown-linux-${{ matrix.target }}

      - name: Prepare binary file name
        run: |
          mkdir -p releases/build_linux_amd64
          mv ./target/x86_64-unknown-linux-${{ matrix.target }}/release/zksolc releases/build_linux_amd64/zksolc

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build_linux_amd64
          path: releases

  build_windows_amd64:
    runs-on: windows-2022-github-hosted-16core
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      LIBSTDCPP_SOURCE_PATH: "C:/a/_temp/msys64/mingw64/lib/libstdc++.a"
    outputs:
       SOLC_VERSION: ${{ env.SOLC_VERSION }}
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Prepare msys2
        uses: msys2/setup-msys2@d40200dc2db4c351366b048a9565ad82919e1c24

      - name: Update pacman keys
        shell: msys2 {0}
        run: |
          pacman-key --refresh

      - name: Update pacman deps
        shell: msys2 {0}
        run: |
          pacman -Sy

      - name: Install msys deps
        shell: msys2 {0}
        run: |
          curl -LO https://repo.msys2.org/mingw/mingw64/mingw-w64-x86_64-cmake-3.27.7-3-any.pkg.tar.zst
          pacman --noconfirm -U mingw-w64-x86_64-cmake-3.27.7-3-any.pkg.tar.zst
          pacman --noconfirm -S --needed --overwrite \
          base-devel \
          git \
          ninja \
          mingw-w64-x86_64-clang \
          mingw-w64-x86_64-lld \
          mingw-w64-x86_64-rust \
          mingw-w64-x86_64-gcc-libs \
          mingw-w64-x86_64-gcc

      - name: Build LLVM framework
        shell: msys2 {0}
        run: |
          cargo install compiler-llvm-builder
          export PATH="${PATH}:/c/Users/runneradmin/.cargo/bin/"
          zkevm-llvm clone
          zkevm-llvm build

      - name: Build compiler
        shell: msys2 {0}
        run: |
          cargo build --release

      - name: Prepare binary file name
        run: |
          mkdir -p releases/build_windows_amd64
          mv ./target/release/zksolc.exe releases/build_windows_amd64/zksolc.exe

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build_windows_amd64
          path: releases


  cli_test_linux_amd64:
    needs:
      - build_linux_amd64
    name: CLI tests on linux
    uses: ./.github/workflows/cli_test_run.yaml
    permissions:
        contents: read
    with:
        name: build_linux_amd64
        path: releases
        runner: matterlabs-ci-runner
        solc_url: https://github.com/matter-labs/era-solidity/releases/download/${{ needs.build_linux_amd64.outputs.SOLC_VERSION }}-1.0.0/solc-linux-amd64-${{ needs.build_linux_amd64.outputs.SOLC_VERSION }}-1.0.0
        

  cli_test_windows:
    needs:
      - build_windows_amd64
    name: CLI tests on Windows
    uses: ./.github/workflows/cli_test_run.yaml
    permissions:
        contents: read
    with:
        name: build_windows_amd64
        path: releases
        runner: windows-2022-github-hosted-16core
        solc_url: https://github.com/matter-labs/era-solidity/releases/download/${{ needs.build_windows_amd64.outputs.SOLC_VERSION }}-1.0.0/solc-windows-amd64-${{ needs.build_windows_amd64.outputs.SOLC_VERSION }}-1.0.0.exe

        
  cli_test_macos_amd64:
    needs:
      - build_macos_amd64
    name: CLI tests on macOS
    uses: ./.github/workflows/cli_test_run.yaml
    permissions:
        contents: read
    with:
        name: build_macos_amd64
        path: releases
        runner: macos-12-large
        solc_url: https://github.com/matter-labs/era-solidity/releases/download/${{ needs.build_macos_amd64.outputs.SOLC_VERSION }}-1.0.0/solc-macosx-amd64-${{ needs.build_macos_amd64.outputs.SOLC_VERSION }}-1.0.0
